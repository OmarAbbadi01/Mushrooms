data <- read.csv('D:/Studying/Current/Data mining/Project/mushroom/expanded')
# Configuring columns names
columns <- c('class', 'cap-shape', 'cap-surface', 'cap-color', 'bruises', 'odor', 'gill-attachment', 'gill-spacing',
'gill-size', 'gill-color', 'stalk-shape', 'stalk-root', 'stalk-surface-above-ring', 'stalk-surface-below-ring',
'stalk-color-above-ring', 'stalk-color-below-ring', 'veil-type', 'veil-color', 'ring-number', 'ring-type',
'spore-print-color', 'population', 'habitat')
# Setting the columns names into the data set
colnames(data) <- columns
install.packages("plotrix")
library(plotrix)
# Calculate the percentage of each category
x_percents <- prop.table(x) * 100
x<-table(data$class)
pie(x)
# Calculate the percentage of each category
x_percents <- prop.table(x) * 100
# Create the pie chart
pie(x, labels=paste(names(x), "\n", round(x_percents, 1), "%"), main="Category Distribution")
library(tidyverse)
sum(duplicated(data)) # Num of duplicates
data <- data[!duplicated(data), ]
sum(duplicated(data)) # Num of duplicates
# Missing values are represented by '?'
sum(data == '?')
# All missing values are in the 'stalk-root' attribute
# and this is their distribution
counts <- table(data$`stalk-root`)
barplot(counts)
# To make sure there are 0 NA
sum(is.na(data)) # prints 0
# Since veil-type attribute has only one values it should be deleted
data <- subset(data, select = -`veil-type`)
marks <- data == '?'
is.na(data) <- marks
sum(is.na(data)) # prints 2480
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
getmode(data$`stalk-root`) # prints "BULBOUS"
data$`stalk-root`[is.na(data$`stalk-root`)] <- getmode(data$`stalk-root`)
sum(is.na(data))
###### Finding relationship between attributes and class
library(MASS)
tbl1<- table(data$class,data$odor)
chisq.test(tbl1)
tbl3<- table(data$class,data$`gill-color`)
chisq.test(tbl3)
tbl2<- table(data$class,data$`spore-print-color`)
chisq.test(tbl2)
# show correlation between gill-color and class
tbl3<- table(data$class,data$`gill-color`)
chisq.test(tbl3)
################################################ Classification using Naive Bayes
data$class <- as.factor(data$class)
library(caret)
trainIndex <- createDataPartition(data$class, p = 0.7, list = FALSE)
train <- data[trainIndex,]
test <- data[-trainIndex,]
table(train$class) # to make sure the data is split in a convenient way
library(e1071)
nv <- naiveBayes(class~., data, laplace = 1)
p <- predict(nv, test)
table(p, test$class)
prediction <- table(p, test$class)
##to calculate the accuracy for test part
accuracy = (sum(diag(prediction)) / sum(prediction)) * 100
accuracy
